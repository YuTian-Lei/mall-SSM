<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">

  <import resource="spring-service.xml"/>
  <!-- 1.扫描web相关的bean -->
  <context:component-scan base-package="com.easycode.mmall"/>

  <!-- 2.静态资源默认servlet配置-->
  <!--<mvc:resources location="/static/" mapping="/static/**"/> -->
  <mvc:default-servlet-handler/>

  <!-- 3.定义视图解析器 -->
  <bean id="internalResourceViewResolver"
      class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="prefix" value="/WEB-INF/"/>
    <property name="suffix" value=".jsp"/>
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    <property name="order" value="1"/>
  </bean>

  <!-- 4.定义异常处理器 -->
  <bean id="exceptionResolver" class="com.easycode.mmall.exception.MyExceptionResolver"/>

  <!--5.拦截器的注册-->
  <mvc:interceptors>
    <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <!--<mvc:exclude-mapping path="/person/add"/>-->
      <bean class="com.easycode.mmall.interceptors.MyIntercepter"/>
    </mvc:interceptor>
  </mvc:interceptors>

  <!--6.自定义消息转换器的编码,解决后台传输json回前台时，中文乱码问题 -->
  <bean id="stringHttpMessageConverter"
      class="org.springframework.http.converter.StringHttpMessageConverter">
    <property name="supportedMediaTypes">
      <list>
        <value>text/plain;charset=UTF-8</value>
        <value>test/html;charset=UTF-8</value>
      </list>
    </property>
  </bean>

  <!-- 7.配置json转换器 -->
  <bean id="jsonMessageConverters"
      class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    <property name="supportedMediaTypes">
      <list>
        <value>application/json;charset=UTF-8</value>
      </list>
    </property>
  </bean>

  <!-- 8.开启SpringMVC注解模式 -->
  <mvc:annotation-driven validator="validator">
    <mvc:message-converters>
      <ref bean="stringHttpMessageConverter"/>
      <ref bean="jsonMessageConverters"/>
    </mvc:message-converters>
  </mvc:annotation-driven>

  <!--9.文件上传-->
  <bean id="multipartResolver"
      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="10485760"/>
    <property name="maxInMemorySize" value="4096"/>
    <property name="defaultEncoding" value="UTF-8"/>
  </bean>

  <!-- 10.加载SwaggerConfig  类名改成自己创建的-->
  <bean class="com.easycode.mmall.swagger.SwaggerConfig"/>

  <!--11.整合shiro权限管理框架-->
  <!-- 安全管理器 -->
  <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    <property name="realm" ref="CustomRealm"/>
  </bean>
  <!-- 自定义域 -->
  <bean id="CustomRealm" class="com.easycode.mmall.shiro.CustomRealm">
    <property name="credentialsMatcher" ref="credentialsMatcher"/>
  </bean>
  <!-- 自定义凭证(密码)匹配器 -->
  <bean id="credentialsMatcher" class="com.easycode.mmall.shiro.CustomCredentialsMatcher"/>

  <!-- Shiro的web过滤器 -->
  <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <property name="securityManager" ref="securityManager"></property>
    <!--登录页的url-->
    <property name="loginUrl" value="login.html"/>
    <!--未认证的跳转页面-->
    <property name="unauthorizedUrl" value="index.jsp"/>
    <property name="filterChainDefinitions">
      <value>
        <!--首页不需要拦截-->
        /index.jsp = anon
        <!--登陆不需要拦截-->
        /login/** = anon
        /manage/user/** = anon
        <!--swagger2-->
        /swagger-resources = anon
        /v2/api-docs = anon
        /v2/api-docs-ext = anon
        /doc.html = anon
        /** = authc
      </value>
    </property>
  </bean>
  <!--12.整合HibernateValidator-->
  <bean id="validator"
      class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
  </bean>
</beans>